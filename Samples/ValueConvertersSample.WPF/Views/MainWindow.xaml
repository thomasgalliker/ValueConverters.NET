<Window
    x:Class="ValueConvertersSample.WPF.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
    xmlns:valueConverters="clr-namespace:ValueConverters;assembly=ValueConverters"
    xmlns:viewModel="clr-namespace:ValueConvertersSample.WPF.ViewModels"
    Title="ValueConvertersSample.WPF"
    SizeToContent="WidthAndHeight">
    <Window.DataContext>
        <viewModel:MainViewModel />
    </Window.DataContext>
    <Window.Resources>

        <Style
            x:Key="TrueStyleTemplate"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="{x:Type Button}">
            <Setter Property="Background" Value="LightGreen" />
        </Style>
        <Style
            x:Key="FalseStyleTemplate"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="{x:Type Button}">
            <Setter Property="Background" Value="MistyRose" />
        </Style>

        <valueConverters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <valueConverters:BoolToBrushConverter
            x:Key="BoolToBrushConverter"
            FalseValue="Purple"
            TrueValue="Magenta" />
        <valueConverters:BoolToDoubleConverter
            x:Key="BoolToDoubleConverter"
            FalseValue="16"
            TrueValue="0" />
        <valueConverters:BoolToFontWeightConverter
            x:Key="BoolToFontWeightConverter"
            FalseValue="Normal"
            TrueValue="Bold" />
        <valueConverters:BoolToStringConverter
            x:Key="BoolToStringConverter"
            FalseValue="No"
            TrueValue="Yes" />
        <valueConverters:BoolToStyleConverter
            x:Key="BoolToStyleConverter"
            FalseValue="{StaticResource FalseStyleTemplate}"
            TrueValue="{StaticResource TrueStyleTemplate}" />
        <valueConverters:BoolToThicknessConverter
            x:Key="BoolToThicknessConverter"
            FalseValue="4"
            TrueValue="1" />
        <valueConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <valueConverters:BoolToVisibilityConverter x:Key="BoolToInvertedVisibilityConverter" IsInverted="True" />
        <valueConverters:DateTimeToStringConverter
            x:Key="DateTimeToStringConverter"
            Format="d"
            MinValueString="---"
            PreferredCulture="CurrentUICulture" />
        <valueConverters:DebugConverter x:Key="DebugConverter" />
        <valueConverters:EnumToBoolConverter x:Key="EnumToBoolConverter" />
        <valueConverters:EnumToObjectConverter x:Key="EnumToObjectConverter">
            <valueConverters:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <BitmapImage x:Key="Off" UriSource="/Resources/Images/stop.png" />
                    <BitmapImage x:Key="On" UriSource="/Resources/Images/play.png" />
                    <BitmapImage x:Key="Maybe" UriSource="/Resources/Images/pause.png" />
                </ResourceDictionary>
            </valueConverters:EnumToObjectConverter.Items>
        </valueConverters:EnumToObjectConverter>
        <valueConverters:EnumWrapperConverter x:Key="EnumWrapperConverter" />
        <valueConverters:IsEmptyConverter x:Key="IsNotEmptyConverter" IsInverted="True" />

        <valueConverters:ValueConverterGroup x:Key="ValueConverterGroupDemo">
            <valueConverters:StringIsNullOrEmptyConverter />
            <valueConverters:BoolInverter />
            <valueConverters:BoolInverter />
            <valueConverters:BoolToVisibilityConverter />
            <valueConverters:DebugConverter />
        </valueConverters:ValueConverterGroup>

        <valueConverters:MinMaxValueToBoolConverter
            x:Key="MinMaxValueToBoolConverter"
            MaxValue="80"
            MinValue="20" />
    </Window.Resources>

    <Border
        BorderBrush="{Binding IsEditing, Converter={StaticResource BoolToBrushConverter}}"
        BorderThickness="{Binding IsEditing, Converter={StaticResource BoolToThicknessConverter}}"
        CornerRadius="{Binding IsEditing, Converter={StaticResource BoolToDoubleConverter}}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label
                Grid.Row="0"
                Grid.Column="0"
                Content="IsEnabled:" />
            <Label
                Grid.Row="0"
                Grid.Column="1"
                Content="{Binding IsEnabled, Converter={StaticResource BoolToStringConverter}}"
                FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}" />
            <CheckBox
                Grid.Row="0"
                Grid.Column="1"
                Content="{Binding IsEnabled, Converter={StaticResource BoolToStringConverter}}"
                FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                IsChecked="{Binding IsEnabled, Converter={StaticResource DebugConverter}}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />

            <Label
                Grid.Row="1"
                Grid.Column="0"
                Content="UserName:" />
            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                Text="{Binding UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label
                Grid.Row="1"
                Grid.Column="2"
                Content="Please enter user name"
                Foreground="Red"
                Visibility="{Binding UserName, Converter={StaticResource ValueConverterGroupDemo}}" />

            <Label
                Grid.Row="2"
                Grid.Column="0"
                Content="ChangeDate:" />
            <Label
                Grid.Row="2"
                Grid.Column="1"
                Content="{Binding ChangeDate, Converter={StaticResource DateTimeToStringConverter}, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"
                FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}" />
            <TextBox
                Grid.Row="2"
                Grid.Column="1"
                FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                Text="{Binding ChangeDate, Converter={StaticResource DateTimeToStringConverter}, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />
            <DatePicker
                Grid.Row="2"
                Grid.Column="1"
                SelectedDate="{Binding ChangeDate, Mode=TwoWay}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />

            <Label
                Grid.Row="3"
                Grid.Column="0"
                Content="Radio frequency:" />
            <Label
                Grid.Row="3"
                Grid.Column="1"
                Content="{Binding SelectedRadioFrequency, Converter={StaticResource EnumWrapperConverter}}"
                FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}" />
            <ListBox
                Grid.Row="3"
                Grid.Column="1"
                ItemsSource="{Binding RadioFrequencies}"
                SelectedItem="{Binding SelectedRadioFrequency}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Content="{Binding LocalizedValue}" GroupName="Properties">
                            <RadioButton.IsChecked>
                                <Binding
                                    Mode="TwoWay"
                                    Path="IsSelected"
                                    RelativeSource="{RelativeSource AncestorType=ListBoxItem}" />
                            </RadioButton.IsChecked>
                        </RadioButton>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <ComboBox
                Grid.Row="3"
                Grid.Column="2"
                Height="22"
                VerticalAlignment="Top"
                DisplayMemberPath="LocalizedValue"
                ItemsSource="{Binding RadioFrequencies}"
                SelectedItem="{Binding SelectedRadioFrequency}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                <!--  Alternatively, instead of using 'DisplayMemberPath' you could define an ItemTemplate:  -->
                <!--<ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding LocalizedValue, Mode=OneWay}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>-->
            </ComboBox>

            <Label
                Grid.Row="4"
                Grid.Column="0"
                Content="Party mode:" />
            <StackPanel
                Grid.Row="4"
                Grid.Column="1"
                Orientation="Horizontal">
                <Image
                    Height="24"
                    Source="{Binding SelectedPartyMode, Converter={StaticResource EnumToObjectConverter}}"
                    Stretch="Uniform" />
                <Button
                    Command="{Binding NextPartyModeCommand}"
                    Content="Next"
                    Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />
                <Label
                    Content="{Binding SelectedPartyMode, Converter={StaticResource EnumWrapperConverter}}"
                    FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                    Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}" />
                <ComboBox
                    Height="22"
                    VerticalAlignment="Top"
                    DisplayMemberPath="LocalizedValue"
                    ItemsSource="{Binding PartyModes, Converter={StaticResource EnumWrapperConverter}}"
                    SelectedItem="{Binding SelectedPartyMode, Converter={StaticResource EnumWrapperConverter}}"
                    Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                    <!--  Alternatively, instead of using 'DisplayMemberPath' you could define an ItemTemplate:  -->
                    <!--<ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding LocalizedValue}" Margin="0" Padding="0"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>-->
                </ComboBox>
                <Button
                    Command="{Binding ClearPartyModesCommand}"
                    Content="Clear"
                    IsEnabled="{Binding PartyModes, Converter={StaticResource IsNotEmptyConverter}}" />
                <Button
                    Command="{Binding FillPartyModesCommand}"
                    Content="Fill"
                    IsEnabled="{Binding PartyModes, Converter={x:Static valueConverters:IsEmptyConverter.Instance}}" />

            </StackPanel>

            <Label
                Grid.Row="5"
                Grid.Column="0"
                Content="Language:" />
            <Label
                Grid.Row="5"
                Grid.Column="1"
                Content="{Binding SelectedLanguage.DisplayName}"
                FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}" />

            <ComboBox
                Grid.Row="5"
                Grid.Column="1"
                Height="22"
                VerticalAlignment="Top"
                DisplayMemberPath="DisplayName"
                ItemsSource="{Binding Languages}"
                SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />

            <Button
                Grid.Row="6"
                Grid.Column="1"
                Width="100"
                HorizontalAlignment="Right"
                BorderThickness="{Binding IsEditing, Converter={StaticResource BoolToThicknessConverter}}"
                Command="{Binding EditCommand}"
                Content="Edit"
                IsEnabled="{Binding IsEditing, Converter={StaticResource BoolNegationConverter}}"
                Style="{Binding IsEditing, Converter={StaticResource BoolToStyleConverter}}" />

            <Button
                Grid.Row="6"
                Grid.Column="2"
                Width="100"
                Margin="16,0,0,0"
                HorizontalAlignment="left"
                Command="{Binding CancelCommand}"
                Content="Cancel"
                IsEnabled="{Binding IsEditing}"
                Style="{Binding IsEditing, Converter={StaticResource BoolToStyleConverter}}" />

            <TextBlock
                Grid.Row="7"
                Grid.Column="0"
                Text="{Binding Source={x:Reference Slider}, Path=Value, Converter={StaticResource MinMaxValueToBoolConverter}, StringFormat='In range: {0}'}" />

            <Slider
                x:Name="Slider"
                Grid.Row="7"
                Grid.Column="1"
                Maximum="100"
                Minimum="0"
                Ticks="1" />
        </Grid>
    </Border>
</Window>
